plugins {
    id 'java'
}

group 'net.suqatri.redicloud'

dependencies {
    implementation project(':commons')
    implementation project(':api:api')
    implementation project(':api:api-default-impl')
    implementation project(':commands:command-bungeecord')
    implementation project(':commands:command-core')
    implementation project(':commands:command-locales')
    compileOnly('net.md-5:bungeecord-api:1.19-R0.1-SNAPSHOT')
}

task createProperties(dependsOn: processResources) {
    doLast {
        new File("$buildDir/resources/main/redicloud.properties").withWriter { w ->
            Properties p = new Properties()
            p['version'] = project.version.toString()
            p['git-commit'] = getCommitHash()
            p['git-branch-name'] = getCurrentBrancheName()
            p.store w, null
        }
    }
}

def getCommitHash() {
    def git = new ProcessBuilder('git', 'rev-parse', getCurrentBrancheName()).directory(project.projectDir).start()
    def inputStream = git.getInputStream();
    def reader = new BufferedReader(new InputStreamReader(inputStream))
    def commitHash = reader.readLine()
    git.waitFor()
    return commitHash
}

def getCurrentBrancheName(){
    def git = new ProcessBuilder('git', 'symbolic-ref', '--short', '-q', 'HEAD').directory(project.projectDir).start()
    def inputStream = git.getInputStream();
    def reader = new BufferedReader(new InputStreamReader(inputStream))
    def branchName = reader.readLine()
    git.waitFor()
    return branchName
}

classes {
    dependsOn createProperties
}